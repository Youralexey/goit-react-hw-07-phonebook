{"version":3,"sources":["App/App.styled.jsx","apiService.js","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.jsx","App/App.js","redux/store.js","index.js"],"names":["PrimaryTitle","styled","h1","SecondaryTitle","h2","Button","button","apiService","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","contactData","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","Form","form","Label","label","Input","input","ContactsForm","useState","name","setName","number","setNumber","contacts","data","handleChange","e","target","value","action","onSubmit","preventDefault","find","contact","toLowerCase","toast","style","borderRadius","background","color","duration","htmlFor","onChange","type","pattern","title","required","List","ul","ListItem","li","Wrapper","div","Filter","filter","ContactsList","setContacts","useEffect","normalizeFilter","filterValue","includes","map","id","onClick","App","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.4bdcd44a.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const PrimaryTitle = styled.h1`\r\nmargin-left: 80px;\r\ncolor: #0a034f;\r\n`;\r\n\r\nexport const SecondaryTitle = styled.h2`\r\n  margin-left: 80px;\r\n  color: #0a034f;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: fit-content;\r\n  padding: 8px;\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  background-color: #5a6fb5;\r\n  border: none;\r\n  border-radius: 8px;\r\n  &:hover,\r\n  &:active {\r\n    cursor: pointer;\r\n    background-color: #98cedc;\r\n  }\r\n`;","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const apiService = createApi({\r\n  reducerPath: \"contactsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://617187f3c20f3a001705fdb5.mockapi.io/api/v1\",\r\n  }),\r\n  tagTypes: [\"Contacts\"],\r\n  endpoints: (builder) => ({\r\n    fetchContacts: builder.query({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"Contacts\"],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: (contactId) => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: (contactData) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: contactData,\r\n      }),\r\n      invalidatesTags: [\"Contacts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = apiService;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 40px;\r\n  padding: 30px;\r\n  border: none;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;\r\n","import { useState } from 'react';\r\nimport { useCreateContactMutation, useFetchContactsQuery } from '../../apiService';\r\nimport { Form, Label, Input } from './ContactsForm.styled';\r\nimport { Button } from '../../App/App.styled';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nexport default function ContactsForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [createContact] = useCreateContactMutation();\r\n  const {data: contacts} = useFetchContactsQuery();\r\n\r\n  const handleChange = (e) => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const notification = () => {\r\n      toast(`${name} is already in contacts`, {\r\n        style: {\r\n          borderRadius: '10px',\r\n          background: '#e4cc17',\r\n          color: '#000',\r\n          duration: 2000,\r\n        },})};\r\n  \r\n    const checkContact = contacts.find(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n      \r\n    );\r\n    if (checkContact) {\r\n      notification();\r\n      return;\r\n    };\r\n    \r\n    createContact({ name, number });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form action=\"\" onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"name\">Name</Label>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <Label htmlFor=\"number\">Number</Label>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <Button type=\"submit\"> Add contact</Button>\r\n      </Form>\r\n      <Toaster />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: circle;\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-top: 8px;\r\n  font-size: 18px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 60px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n`;","import PropTypes from 'prop-types';\r\nimport { Wrapper, Label, Input } from './Filter.styled';\r\n\r\nexport default function Filter({ filter }) {\r\n  const onChange = e => {\r\n    const value = e.target.value\r\n    filter(value);\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\r\n      <Input type=\"text\" name=\"filter\" onChange={onChange} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n}","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n} from '../../apiService';\r\n\r\nimport { List, ListItem } from './ContactsList.styled';\r\nimport { Button } from '../../App/App.styled';\r\nimport Filter from '../Filter/Filter';\r\n\r\nfunction ContactsList() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const { data } = useFetchContactsQuery();\r\n  const [deleteContact] = useDeleteContactMutation();\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setContacts(data);\r\n    }\r\n  }, [data]);\r\n\r\n  const filteredContacts = filter => {\r\n    if (filter) {\r\n      const normalizeFilter = filter.toLowerCase();\r\n      const filterValue = contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizeFilter),\r\n      );\r\n\r\n      setContacts(filterValue);\r\n    } else {\r\n      setContacts(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Filter filter={filteredContacts} />\r\n      <List>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ListItem key={id}>\r\n            {name} - {number}{' '}\r\n            <Button type=\"button\" onClick={() => deleteContact(id)}>\r\n              Delete\r\n            </Button>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n  filteredContacts: PropTypes.func,\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n}","import { PrimaryTitle, SecondaryTitle } from \"./App.styled.jsx\";\r\nimport ContactsForm from \"../components/ContactsForm/ContactsForm\";\r\nimport ContactsList from \"../components/ContactsList/ContactsList.jsx\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <PrimaryTitle>Phonebook</PrimaryTitle>\r\n      <ContactsForm />\r\n      <SecondaryTitle>Contacts</SecondaryTitle>\r\n      <ContactsList />\r\n    </>\r\n  );\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { apiService } from \"../apiService\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [apiService.reducerPath]: apiService.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    apiService.middleware,\r\n  ],\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n","import \"./index.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App/App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}